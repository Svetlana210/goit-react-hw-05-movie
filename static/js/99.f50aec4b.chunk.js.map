{"version":3,"file":"static/js/99.f50aec4b.chunk.js","mappings":"wSACMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,6GAAOC,EAAP,+BAAc,EAAGC,EAAjB,+BAA0B,OAA1B,SACHP,EAASQ,IAAT,0BAAgCD,GAAU,CAC/DJ,OAAQ,CAAEG,KAAAA,KAFc,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,qDAOZC,EAAkB,mCAAG,WAAOC,GAAP,8FAAcN,EAAd,+BAAqB,EAArB,SACTN,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CAAES,MAAAA,EAAON,KAAAA,KAFa,uBACxBG,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,SAJoB,2CAAH,sDAOlBG,EAAmB,mCAAG,WAAMC,GAAN,yFACVd,EAASQ,IAAT,iBAAuBM,GAAM,CAAC,GADpB,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBM,EAAgB,mCAAG,WAAMD,GAAN,yFACPd,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAAC,GAD/B,uBACtBL,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBO,EAAmB,mCAAG,WAAMF,GAAN,yFACVd,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAAC,GAD5B,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,mGC5BnBQ,EAAc,SAAAC,GACzB,OAAIA,EACI,mCAAN,OAA0CA,GAErCC,CACR,EAEYC,EAAa,SAAAF,GACxB,OAAIA,EACI,mCAAN,OAA0CA,GAErCG,CACR,C,gKCdD,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mBAA3E,EAAqG,mB,SCO/FC,EAAO,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQf,GAAOgB,EAAAA,EAAAA,MAAPhB,IAERiB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBL,GAAW,GADU,mBAGAZ,EAAAA,EAAAA,IAAiBD,GAHjB,OAGbL,EAHa,OAInBgB,EAAShB,EAAKwB,MAJK,gDAMnBJ,EAAS,KAAMK,SANI,yBAQnBP,GAAW,GARQ,4EAAH,qDAWpBK,GACD,GAAE,CAAClB,EAAIc,IAER,IAAMO,EAAWX,EAAMY,KAAI,gBAAGtB,EAAH,EAAGA,GAAIuB,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACzB,gBAAIC,UAAWC,EAAf,WACE,gBAAKC,KAAKtB,EAAAA,EAAAA,GAAWmB,GAAeI,IAAKL,EAAMM,MAAM,SACrD,cAAGJ,UAAWC,EAAd,SAA4BH,KAC5B,eAAGE,UAAWC,EAAd,wBAAuCJ,OAHRvB,EADR,IAQ3B,OACE,gCACGY,IAAW,SAACmB,EAAA,EAAD,IACXjB,IAAS,iCACTJ,EAAMsB,OAAS,IAAK,eAAIN,UAAWC,EAAf,SAA6BN,MAGvD,EAEDb,EAAKyB,aAAe,CAClBvB,MAAO,IAcT,O","sources":["api.js","components/checkPoster/checkPoster.js","webpack://react-homework-template/./src/pages/Cast/cast.module.css?3847","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ccd726dee91d403c616acd8dbc070a9c',\n  },\n});\n\nexport const searchMovies = async (page = 1, period = 'week') => {\n  const { data } = await instance.get(`/trending/movie/${period}`, {\n    params: { page },\n  });\n  return data.results;\n};\n\nexport const searchMoviesByWord = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: { query, page },\n  });\n  return data.results;\n};\n\nexport const searchMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {});\n  return data;\n};\n\nexport const searchMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {});\n  return data;\n};\nexport const searchMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {});\n  return data;\n};\n","import noPoster from '../MovieDetailsInfo/no-poster-available.png';\nimport noImage from '../../pages/Cast/no-image.png';\n\nexport const checkPoster = img => {\n  if (img) {\n    return `https://image.tmdb.org/t/p/w500/${img}`;\n  }\n  return noPoster;\n};\n\nexport const checkImage = img => {\n  if (img) {\n    return `https://image.tmdb.org/t/p/w500/${img}`;\n  }\n  return noImage;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__BjE1s\",\"item\":\"cast_item__rFGCo\",\"text\":\"cast_text__UlQf6\",\"name\":\"cast_name__NFLTM\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { searchMoviesCast } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport { checkImage } from '../../components/checkPoster/checkPoster';\nimport styles from './cast.module.css';\n\nconst Cast = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      setLoading(true);\n      try {\n        const data = await searchMoviesCast(id);\n        setItems(data.cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [id, error]);\n\n  const elements = items.map(({ id, character, name, profile_path }) => (\n    <li className={styles.item} key={id}>\n      <img src={checkImage(profile_path)} alt={name} width=\"140\"></img>\n      <p className={styles.name}>{name}</p>\n      <p className={styles.text}>Character: {character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>Error</p>}\n      {items.length > 0 && <ul className={styles.list}>{elements}</ul>}\n    </>\n  );\n};\n\nCast.defaultProps = {\n  items: [],\n};\n\nCast.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","page","period","get","data","results","searchMoviesByWord","query","searchMoviesDetails","id","searchMoviesCast","searchMoviesReviews","checkPoster","img","noPoster","checkImage","noImage","Cast","useState","items","setItems","loading","setLoading","error","setError","useParams","useEffect","fetchMovieCast","cast","message","elements","map","character","name","profile_path","className","styles","src","alt","width","Loader","length","defaultProps"],"sourceRoot":""}