{"version":3,"file":"static/js/36.fda08773.chunk.js","mappings":"wSACMA,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAY,mCAAG,6GAAOC,EAAP,+BAAc,EAAGC,EAAjB,+BAA0B,OAA1B,SACHP,EAASQ,IAAT,0BAAgCD,GAAU,CAC/DJ,OAAQ,CAAEG,KAAAA,KAFc,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,qDAOZC,EAAkB,mCAAG,WAAOC,GAAP,8FAAcN,EAAd,+BAAqB,EAArB,SACTN,EAASQ,IAAT,gBAA8B,CACnDL,OAAQ,CAAES,MAAAA,EAAON,KAAAA,KAFa,uBACxBG,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,SAJoB,2CAAH,sDAOlBG,EAAmB,mCAAG,WAAMC,GAAN,yFACVd,EAASQ,IAAT,iBAAuBM,GAAM,CAAC,GADpB,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDAKnBM,EAAgB,mCAAG,WAAMD,GAAN,yFACPd,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAAC,GAD/B,uBACtBL,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBO,EAAmB,mCAAG,WAAMF,GAAN,yFACVd,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAAC,GAD5B,uBACzBL,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qD,uJC9BhC,GAAgB,KAAO,sBAAsB,KAAO,uB,SC+CpD,EA1CgB,WACd,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQT,GAAOU,EAAAA,EAAAA,MAAPV,IAERW,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBL,GAAW,GADa,mBAGHL,EAAAA,EAAAA,IAAoBF,GAHjB,OAGhBL,EAHgB,OAItBU,EAASV,EAAKC,SAJQ,gDAMtBa,EAAS,KAAMI,SANO,yBAQtBN,GAAW,GARW,4EAAH,qDAWvBK,GACD,GAAE,CAACZ,EAAIQ,IAER,IAAMM,EAAWV,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASjB,EAApB,EAAoBA,GAApB,OACzB,gBAAIkB,UAAWC,EAAAA,KAAf,WACE,eAAGD,UAAWC,EAAAA,KAAd,qBAAoCH,MACpC,cAAGE,UAAWC,EAAAA,KAAd,SAA4BF,MAFGjB,EADR,IAO3B,OACE,gCACGM,IAAW,SAACc,EAAA,EAAD,IACXZ,IAAS,iCACTJ,EAAMiB,OAAS,IAAK,eAAIH,UAAWC,EAAAA,KAAf,SAA6BL,IAChC,IAAjBV,EAAMiB,SACL,cAAGH,UAAWC,EAAAA,WAAd,wDAMP,C","sources":["api.js","webpack://react-homework-template/./src/pages/Reviews/reviews.module.css?f10c","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ccd726dee91d403c616acd8dbc070a9c',\n  },\n});\n\nexport const searchMovies = async (page = 1, period = 'week') => {\n  const { data } = await instance.get(`/trending/movie/${period}`, {\n    params: { page },\n  });\n  return data.results;\n};\n\nexport const searchMoviesByWord = async (query, page = 1) => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: { query, page },\n  });\n  return data.results;\n};\n\nexport const searchMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {});\n  return data;\n};\n\nexport const searchMoviesCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {});\n  return data;\n};\nexport const searchMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {});\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__djUl7\",\"name\":\"reviews_name__4hd7q\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { searchMoviesReviews } from 'api';\nimport Loader from 'components/Loader/Loader';\nimport styles from './reviews.module.css';\n\nconst Reviews = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      setLoading(true);\n      try {\n        const data = await searchMoviesReviews(id);\n        setItems(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [id, error]);\n\n  const elements = items.map(({ author, content, id }) => (\n    <li className={styles.item} key={id}>\n      <p className={styles.name}>Author: {author}</p>\n      <p className={styles.text}>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>Error</p>}\n      {items.length > 0 && <ul className={styles.list}>{elements}</ul>}\n      {items.length === 0 && (\n        <p className={styles.textreview}>\n          We don't have any reviews for this movie\n        </p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["instance","axios","baseURL","params","api_key","searchMovies","page","period","get","data","results","searchMoviesByWord","query","searchMoviesDetails","id","searchMoviesCast","searchMoviesReviews","useState","items","setItems","loading","setLoading","error","setError","useParams","useEffect","fetchMovieReviews","message","elements","map","author","content","className","styles","Loader","length"],"sourceRoot":""}